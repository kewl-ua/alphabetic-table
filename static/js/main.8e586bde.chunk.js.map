{"version":3,"sources":["services/Service.js","services/index.js","redux/slices/employee.js","redux/store.js","pages/Home.jsx","components/AlphabeticTable/styles.js","components/AlphabeticTable/AlphabeticTable.jsx","components/AlphabeticTableHead/styles.js","components/AlphabeticTableHead/AlphabeticTableHead.jsx","components/AlphabeticTableHeading/styles.js","components/AlphabeticTableHeading/AlphabeticTableHeading.jsx","components/AlphabeticTableBody/style.js","components/AlphabeticTableBody/AlphabeticTableBody.jsx","components/AlphabeticTableSection/styles.js","components/AlphabeticTableSection/AlphabeticalTableSection.jsx","shapes/employee.js","components/AlphabeticEmployeeSwitcher/styles.js","components/AlphabeticEmployeeSwitcher/AlphabeticEmployeeSwitcher.jsx","components/AlphabeticEmployeeItem/styles.js","components/AlphabeticEmployeeItem/AlphabeticEmployeeItem.jsx","constants/letters.js","constants/date.js","shapes/alphabeticEmployees.js","components/AlphabeticEmployeeList/styles.js","components/AlphabeticEmployeeList/AlphabeticEmployeeList.jsx","components/AlphabeticEmployeeBirthdayItem/styles.js","helpers/employee.js","constants/sort.js","components/AlphabeticEmployeeBirthdayItem/AlphabeticEmployeeBirthdayItem.jsx","shapes/employeesByMonth.js","components/AlphabeticEmployeeBirthdayList/styles.js","components/AlphabeticEmployeeBirthdayList/AlphabeticEmployeeBirthdayList.jsx","redux/selectors/employee.js","pages/Employees.jsx","pages/NotFound.jsx","App.js","reportWebVitals.js","index.js"],"names":["httpMethods","EmployeeService","baseUrl","this","a","path","method","data","url","join","options","headers","contentType","body","JSON","stringify","fetch","request","then","res","json","id","fetchEmployees","createAsyncThunk","list","employees","console","log","slice","createSlice","name","initialState","selectedEmployeesIds","reducers","setEmployees","state","action","payload","selectEmployee","push","unselectEmployee","filter","seId","extraReducers","fulfilled","actions","reducer","store","configureStore","employee","employeesReducer","Home","to","useStyles","createUseStyles","root","width","employeeSection","AlphabeticTable","children","classes","className","memo","inner","AlphabeticTableHead","fontSize","AlphabeticTableHeading","textAlign","AlphabeticTableBody","verticalAlign","AlphabeticTableSection","props","clsx","shape","PropTypes","string","firstName","lastName","dob","border","padding","margin","minWidth","display","flexDirection","marginTop","legend","float","fontWeight","clear","legendActive","color","label","height","cursor","borderRadius","labelText","marginLeft","inputWrapper","alignItems","input","backgroundColor","boxShadow","AlphabeticEmployeeSwitcher","dispatch","useDispatch","useState","isActive","setIsActive","activate","deactivate","handleActivateClick","handleDeactivateClick","handleKeyDown","event","cb","keyCode","preventDefault","prev","type","checked","onChange","tabIndex","role","aria-checked","onKeyDown","htmlFor","onClick","title","switchers","AlphabeticEmployeeItem","letter","employeeSwitchers","map","length","LETTERS","Array","from","MONTHS","lettersEmployeesEntries","l","arrayOf","employeeShape","Object","fromEntries","gridTemplateColumns","gridGap","listStyle","AlphabeticEmployeeList","alphabeticEmployees","items","useMemo","entries","lEmployees","month","dobList","dobItem","lastNamePredicate","b","toUpperCase","getEmployeesAlphaMap","sortedEmployees","sort","lettersMap","createLettersMap","datePattern","getMonthName","monthNumber","parseDateOfBirth","match","groups","AlphabeticEmployeeBirthdayItem","bDay","day","bMonth","bYear","year","Number","monthsShapeEntries","monthsShapeMap","AlphabeticEmployeeBirthdayList","employeesByMonth","employeesSelector","alphabeticEmployeesSelector","createSelector","selectedEmployeesSelector","includes","groupedByMonthEmployeesSelector","selectedEmployees","monthEmployeesBirthdaysMap","getEmployeesMonthsMap","alphaSection","birthdaySection","borderLeft","Employees","useSelector","groupedByMonthEmployees","useEffect","NotFound","App","basename","process","exact","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","jss","setup","preset","use","jssNestedPlugin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e586bde.chunk.js","sourcesContent":["const httpMethods = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n};\n\nclass Service {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  async request(path = '', method = httpMethods.GET, data = {}) {\n    const url = [this.baseUrl, path].join('/');\n    const options = {\n      method,\n      headers: {\n        contentType: 'application/json',\n      },\n    };\n\n    if (method === httpMethods.POST || method === httpMethods.PUT) {\n      options.body = JSON.stringify(data);\n    }\n\n    return fetch(url, options);\n  }\n\n  async list() {\n    return this.request().then((res) => res.json());\n  }\n\n  async entity(id) {\n    return this.request(id).then((res) => res.json());\n  }\n\n  async create(data) {\n    return this.request('', httpMethods.POST, data).then((res) => res.json());\n  }\n\n  async update(id, data) {\n    return this.request(id, httpMethods.PUT, data).then((res) => res.json());\n  }\n}\n\nexport default Service;\n","import Service from './Service';\n\nexport const EmployeeService = new Service(\n  'https://yalantis-react-school-api.yalantis.com/api/task0/users'\n);\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { EmployeeService } from '../../services';\n\n// Async thunks\nexport const fetchEmployees = createAsyncThunk(\n  'employees/fetchEmployees',\n  async () => {\n    try {\n      const employees = await EmployeeService.list();\n\n      return { employees };\n    } catch (e) {\n      console.log('Failed to fetch employees: ', e);\n    }\n  }\n);\n\nconst slice = createSlice({\n  name: 'employee',\n  initialState: {\n    employees: [],\n    selectedEmployeesIds: [],\n  },\n  reducers: {\n    setEmployees: (state, action) => {\n      state.employees = action.payload.employees;\n    },\n    selectEmployee: (state, action) => {\n      state.selectedEmployeesIds.push(action.payload.id);\n    },\n    unselectEmployee: (state, action) => {\n      state.selectedEmployeesIds = state.selectedEmployeesIds.filter(\n        (seId) => seId !== action.payload.id\n      );\n    },\n  },\n  extraReducers: {\n    [fetchEmployees.fulfilled]: (state, action) => {\n      state.employees = action.payload.employees;\n    },\n  },\n});\n\n// Actions\nexport const { setEmployees, selectEmployee, unselectEmployee } = slice.actions;\n\nexport const reducer = slice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { reducer as employeesReducer } from './slices/employee';\n\nconst store = configureStore({\n  reducer: {\n    employee: employeesReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/employees\">Employees</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Home;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    width: '100%',\n  },\n  employeeSection: {\n    width: '100%',\n  },\n});\n\nexport default useStyles;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useStyles from './styles';\n\nconst AlphabeticTable = ({ children }) => {\n  const classes = useStyles();\n\n  return <table className={classes.root}>{children}</table>;\n};\n\nAlphabeticTable.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default memo(AlphabeticTable);\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {},\n  inner: {},\n});\n\nexport default useStyles;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useStyles from './styles';\n\nconst AlphabeticTableHead = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <thead className={classes.root}>\n      <tr className={classes.inner}>{children}</tr>\n    </thead>\n  );\n};\n\nAlphabeticTableHead.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default memo(AlphabeticTableHead);\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    fontSize: 25,\n  },\n});\n\nexport default useStyles;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useStyles from './styles';\n\nconst AlphabeticTableHeading = ({ children }) => {\n  const classes = useStyles();\n\n  return <th className={classes.root}>{children}</th>;\n};\n\nAlphabeticTableHeading.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default memo(AlphabeticTableHeading);\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    textAlign: 'left',\n  },\n});\n\nexport default useStyles;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useStyles from './style';\n\nconst AlphabeticTableBody = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <tbody className={classes.root}>\n      <tr>{children}</tr>\n    </tbody>\n  );\n};\n\nAlphabeticTableBody.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default memo(AlphabeticTableBody);\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    verticalAlign: 'top',\n  },\n});\n\nexport default useStyles;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport useStyles from './styles';\n\nconst AlphabeticTableSection = ({ className = '', children, ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <td className={clsx(classes.root, className)} {...props}>\n      {children}\n    </td>\n  );\n};\n\nAlphabeticTableSection.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default memo(AlphabeticTableSection);\n","import PropTypes from 'prop-types';\n\nconst shape = PropTypes.shape({\n  id: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dob: PropTypes.string,\n});\n\nexport default shape;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    border: 0,\n    padding: 0,\n    margin: 0,\n    minWidth: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    '& + &': {\n      marginTop: 30,\n    },\n  },\n  legend: {\n    display: 'table',\n    float: 'left',\n    margin: 0,\n    padding: 0,\n    fontWeight: 600,\n    width: '100%',\n    '& + *': {\n      clear: 'both',\n    },\n  },\n  legendActive: {\n    color: '#00f',\n  },\n  label: {\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    cursor: 'pointer',\n    border: '1px solid',\n    borderRadius: '50%',\n  },\n  labelText: {\n    marginLeft: 5,\n  },\n  inputWrapper: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    marginTop: 10,\n    cursor: 'pointer',\n  },\n  input: {\n    display: 'none',\n    '&:checked + label': {\n      backgroundColor: '#000000',\n      boxShadow: 'inset 0 0 0 2px #ffffff',\n    },\n  },\n});\n\nexport default useStyles;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { selectEmployee, unselectEmployee } from '../../redux/slices/employee';\n\nimport employeeShape from '../../shapes/employee';\n\nimport useStyles from './styles';\n\nconst SPACE_KEY_CODE = 32;\n\nconst AlphabeticEmployeeSwitcher = ({ employee }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [isActive, setIsActive] = useState(false);\n\n  const activate = () => {\n    dispatch(selectEmployee({ id: employee.id }));\n  };\n\n  const deactivate = () => {\n    dispatch(unselectEmployee({ id: employee.id }));\n  };\n\n  const handleActivateClick = () => {\n    activate();\n    setIsActive(true);\n  };\n\n  const handleDeactivateClick = () => {\n    deactivate();\n    setIsActive(false);\n  };\n\n  const handleKeyDown = (event, cb) => {\n    if (event.keyCode === SPACE_KEY_CODE) {\n      event.preventDefault();\n      cb();\n      setIsActive((prev) => !prev);\n    }\n  };\n\n  const handleActivateKeyDown = (event) => {\n    handleKeyDown(event, activate);\n  };\n\n  const handleDeactivateKeyDown = (event) => {\n    handleKeyDown(event, deactivate);\n  };\n\n  return (\n    <fieldset className={classes.root}>\n      <legend\n        className={clsx(classes.legend, { [classes.legendActive]: isActive })}\n      >\n        {employee.firstName} {employee.lastName}\n      </legend>\n\n      <div className={classes.inputWrapper}>\n        <input\n          type=\"radio\"\n          checked={isActive}\n          className={classes.input}\n          onChange={handleActivateClick}\n          id={`${employee.id}-activate`}\n        />\n\n        <label\n          tabIndex=\"0\"\n          role=\"radio\"\n          aria-checked={isActive}\n          className={classes.label}\n          onKeyDown={handleActivateKeyDown}\n          htmlFor={`${employee.id}-activate`}\n        />\n\n        <span className={classes.labelText} onClick={handleActivateClick}>\n          active\n        </span>\n      </div>\n\n      <div className={classes.inputWrapper}>\n        <input\n          type=\"radio\"\n          checked={!isActive}\n          className={classes.input}\n          id={`${employee.id}-deactivate`}\n          onChange={handleDeactivateClick}\n        />\n\n        <label\n          tabIndex=\"0\"\n          role=\"radio\"\n          aria-checked={!isActive}\n          className={classes.label}\n          onKeyDown={handleDeactivateKeyDown}\n          htmlFor={`${employee.id}-deactivate`}\n        />\n\n        <span className={classes.labelText} onClick={handleDeactivateClick}>\n          not active\n        </span>\n      </div>\n    </fieldset>\n  );\n};\n\nAlphabeticEmployeeSwitcher.propTypes = {\n  employee: employeeShape,\n};\n\nexport default AlphabeticEmployeeSwitcher;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {},\n  title: {\n    padding: '0 10px',\n    fontSize: 25,\n    margin: '10px 0',\n  },\n  switchers: {},\n});\n\nexport default useStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AlphabeticEmployeeSwitcher from '../AlphabeticEmployeeSwitcher';\n\nimport employeeShape from '../../shapes/employee';\n\nimport useStyles from './styles';\n\nconst AlphabeticEmployeeItem = ({ letter, employees = [] }) => {\n  const classes = useStyles();\n  const employeeSwitchers = employees.map((employee) => (\n    <AlphabeticEmployeeSwitcher key={employee.id} employee={employee} />\n  ));\n\n  return (\n    <li className={classes.root}>\n      <h5 className={classes.title}>{letter}</h5>\n\n      <div className={classes.switchers}>\n        {employees.length > 0 ? employeeSwitchers : <b>-----</b>}\n      </div>\n    </li>\n  );\n};\n\nAlphabeticEmployeeItem.propTypes = {\n  letter: PropTypes.string.isRequired,\n  employees: PropTypes.arrayOf(employeeShape),\n};\n\nexport default AlphabeticEmployeeItem;\n","export const LETTERS = Array.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n","export const MONTHS = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","import PropTypes from 'prop-types';\n\nimport employeeShape from './employee';\n\nimport { LETTERS } from '../constants';\n\nconst lettersEmployeesEntries = LETTERS.map((l) => [\n  l,\n  PropTypes.arrayOf(employeeShape),\n]);\nconst shape = PropTypes.shape(Object.fromEntries(lettersEmployeesEntries));\n\nexport default shape;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    gridGap: 20,\n    listStyle: 'none',\n    padding: 0,\n  },\n});\n\nexport default useStyles;\n","import React, { useMemo } from 'react';\n\nimport AlphabeticEmployeeItem from '../AlphabeticEmployeeItem';\n\nimport alphabeticEmployeesShape from '../../shapes/alphabeticEmployees';\n\nimport useStyles from './styles';\n\nconst AlphabeticEmployeeList = ({ alphabeticEmployees }) => {\n  const classes = useStyles();\n  const items = useMemo(\n    () =>\n      Object.entries(alphabeticEmployees).map(([letter, lEmployees]) => (\n        <AlphabeticEmployeeItem\n          key={letter}\n          letter={letter}\n          employees={lEmployees}\n        />\n      )),\n    [alphabeticEmployees]\n  );\n\n  return <ul className={classes.root}>{items}</ul>;\n};\n\nAlphabeticEmployeeList.propTypes = {\n  alphabeticEmployees: alphabeticEmployeesShape,\n};\n\nexport default AlphabeticEmployeeList;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {},\n  month: {},\n  dobList: {},\n  dobItem: {},\n  dob: {},\n});\n\nexport default useStyles;\n","import { DO_SWAP, DO_NOT_SWAP, MONTHS, LETTERS } from '../constants';\n\nexport const lastNamePredicate = (a, b) =>\n  a.lastName.toUpperCase() > b.lastName.toUpperCase() ? DO_SWAP : DO_NOT_SWAP;\n\nexport const createLettersMap = () => {\n  const lettersMap = {};\n\n  for (const l of LETTERS) {\n    lettersMap[l] = [];\n  }\n\n  return lettersMap;\n};\n\nexport const getEmployeesAlphaMap = (employees) => {\n  const sortedEmployees = [...employees].sort(lastNamePredicate);\n  const lettersMap = createLettersMap();\n\n  for (const employee of sortedEmployees) {\n    const letter = employee.lastName[0].toUpperCase();\n\n    lettersMap[letter].push(employee);\n  }\n\n  return lettersMap;\n};\n\n// Date of birth\nconst datePattern = /(?<year>\\d\\d\\d\\d)-(?<month>\\d\\d)-(?<day>\\d\\d)/;\n\nexport const getMonthName = (monthNumber) => MONTHS[monthNumber - 1];\n\nexport const parseDateOfBirth = (dob) => dob.match(datePattern)?.groups;\n\nexport const getEmployeesMonthsMap = (employees) => {\n  const monthEmployeesBirthdaysMap = {};\n\n  for (const employee of employees) {\n    const month = Number(parseDateOfBirth(employee.dob).month) - 1;\n\n    if (monthEmployeesBirthdaysMap[month]) {\n      monthEmployeesBirthdaysMap[month].push(employee);\n    } else {\n      monthEmployeesBirthdaysMap[month] = [employee];\n    }\n  }\n\n  return monthEmployeesBirthdaysMap;\n};\n","export const DO_SWAP = 1;\nexport const DO_NOT_SWAP = -1;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useStyles from './styles';\n\nimport { MONTHS } from '../../constants';\n\nimport { parseDateOfBirth, getMonthName } from '../../helpers/employee';\n\nimport employeeShape from '../../shapes/employee';\n\nconst AlphabeticEmployeeBirthdayItem = ({ month, employees }) => {\n  const classes = useStyles();\n  const items = employees.map((employee) => {\n    const {\n      day: bDay,\n      month: bMonth,\n      year: bYear,\n    } = parseDateOfBirth(employee.dob);\n\n    return (\n      <li className={classes.dobItem} key={employee.id}>\n        <span className={classes.name}>\n          {employee.firstName} {employee.lastName}\n        </span>\n        &nbsp;-&nbsp;\n        <span className={classes.dob}>\n          {Number(bDay)} {getMonthName(bMonth)}, {bYear} year\n        </span>\n      </li>\n    );\n  });\n\n  return (\n    <li className={classes.root} key={month}>\n      <h3 className={classes.month}>{getMonthName(month)}</h3>\n\n      <ul className={classes.dobList}>{items}</ul>\n    </li>\n  );\n};\n\nAlphabeticEmployeeBirthdayItem.propTypes = {\n  month: PropTypes.oneOf(Object.keys(MONTHS)),\n  employees: PropTypes.arrayOf(employeeShape),\n};\n\nexport default memo(AlphabeticEmployeeBirthdayItem);\n","import PropTypes from 'prop-types';\n\nimport employeeShape from './employee';\n\nimport { MONTHS } from '../constants';\n\nconst monthsShapeEntries = MONTHS.map((month) => [\n  month,\n  PropTypes.arrayOf(employeeShape),\n]);\nconst monthsShapeMap = Object.fromEntries(monthsShapeEntries);\nconst shape = PropTypes.shape(monthsShapeMap);\n\nexport default shape;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    fontWeight: 600,\n  },\n});\n\nexport default useStyles;\n","import React, { useMemo } from 'react';\n\nimport AlphabeticEmployeeBirthdayItem from '../AlphabeticEmployeeBirthdayItem';\n\nimport employeesByMonthShape from '../../shapes/employeesByMonth';\n\nimport useStyles from './styles';\n\nconst AlphabeticEmployeeBirthdayList = ({ employeesByMonth }) => {\n  const classes = useStyles();\n  const items = useMemo(\n    () =>\n      Object.entries(employeesByMonth).map(([month, employees]) => (\n        <AlphabeticEmployeeBirthdayItem\n          key={month}\n          month={month}\n          employees={employees}\n        />\n      )),\n    [employeesByMonth]\n  );\n\n  return <ul className={classes.root}>{items}</ul>;\n};\n\nAlphabeticEmployeeBirthdayList.propTypes = {\n  employeesByMonth: employeesByMonthShape,\n};\n\nexport default AlphabeticEmployeeBirthdayList;\n","import { createSelector } from '@reduxjs/toolkit';\nimport {\n  getEmployeesAlphaMap,\n  getEmployeesMonthsMap,\n} from '../../helpers/employee';\n\n// Selectors\nexport const employeesSelector = (state) => state.employee.employees;\n\nexport const selectedEmployeesIdsSelector = (state) =>\n  state.employee.selectedEmployeesIds;\n\n// Reselectors\nexport const alphabeticEmployeesSelector = createSelector(\n  employeesSelector,\n  (employees) => getEmployeesAlphaMap(employees)\n);\n\nexport const selectedEmployeesSelector = createSelector(\n  employeesSelector,\n  selectedEmployeesIdsSelector,\n  (employees, selectedEmployeesIds) =>\n    employees.filter((employee) => selectedEmployeesIds.includes(employee.id))\n);\n\nexport const groupedByMonthEmployeesSelector = createSelector(\n  selectedEmployeesSelector,\n  (selectedEmployees) => getEmployeesMonthsMap(selectedEmployees)\n);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUseStyles } from 'react-jss';\n\nimport AlphabeticTable from '../components/AlphabeticTable';\nimport AlphabeticTableHead from '../components/AlphabeticTableHead';\nimport AlphabeticTableHeading from '../components/AlphabeticTableHeading';\nimport AlphabeticTableBody from '../components/AlphabeticTableBody';\nimport AlphabeticTableSection from '../components/AlphabeticTableSection';\nimport AplhabeticEmployeeList from '../components/AlphabeticEmployeeList';\nimport AlphabeticEmployeeBirthdayList from '../components/AlphabeticEmployeeBirthdayList';\n\nimport { fetchEmployees } from '../redux/slices/employee';\nimport {\n  alphabeticEmployeesSelector,\n  groupedByMonthEmployeesSelector,\n} from '../redux/selectors/employee';\n\nconst useStyles = createUseStyles({\n  root: {\n    padding: 30,\n  },\n  alphaSection: {\n    width: '75%',\n  },\n  birthdaySection: {\n    width: '25%',\n    borderLeft: '2px solid #666',\n  },\n});\n\nconst Employees = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const alphabeticEmployees = useSelector(alphabeticEmployeesSelector);\n  const groupedByMonthEmployees = useSelector(groupedByMonthEmployeesSelector);\n\n  useEffect(() => {\n    dispatch(fetchEmployees());\n  }, [dispatch]);\n\n  return (\n    <div className={classes.root}>\n      <AlphabeticTable>\n        <AlphabeticTableHead>\n          <AlphabeticTableHeading>Employees</AlphabeticTableHeading>\n          <AlphabeticTableHeading>Employees birthday</AlphabeticTableHeading>\n        </AlphabeticTableHead>\n\n        <AlphabeticTableBody>\n          <AlphabeticTableSection>\n            <AplhabeticEmployeeList alphabeticEmployees={alphabeticEmployees} />\n          </AlphabeticTableSection>\n\n          <AlphabeticTableSection className={classes.birthdaySection}>\n            <AlphabeticEmployeeBirthdayList\n              employeesByMonth={groupedByMonthEmployees}\n            />\n          </AlphabeticTableSection>\n        </AlphabeticTableBody>\n      </AlphabeticTable>\n    </div>\n  );\n};\n\nexport default Employees;\n","import React from 'react';\n\nconst NotFound = () => <h1>No page to be found for the selected route</h1>;\n\nexport default NotFound;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport store from './redux/store';\n\nimport Home from './pages/Home';\nimport Employees from './pages/Employees';\nimport NotFound from './pages/NotFound';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n\n            <Route exact path=\"/employees\">\n              <Employees />\n            </Route>\n\n            <Route status={404}>\n              <NotFound />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport jss from 'jss';\nimport preset from 'jss-preset-default';\nimport jssNestedPlugin from 'jss-plugin-nested';\n\nimport App from './App';\n\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\njss.setup(preset());\njss.use(jssNestedPlugin());\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}