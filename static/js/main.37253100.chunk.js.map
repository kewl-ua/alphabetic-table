{"version":3,"sources":["services/Service.js","services/index.js","redux/slices/employee.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["httpMethods","EmployeeService","baseUrl","this","a","path","method","data","url","join","options","headers","contentType","body","JSON","stringify","fetch","request","then","res","json","id","fetchEmployees","createAsyncThunk","list","employees","console","log","slice","createSlice","name","initialState","selectedEmployeesIds","reducers","setEmployees","state","action","payload","selectEmployee","push","unselectEmployee","filter","seId","extraReducers","fulfilled","actions","reducer","store","configureStore","employee","employeesReducer","Home","React","lazy","Employees","NotFound","App","className","fallback","exact","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","jss","setup","preset","use","jssNestedPlugin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37253100.chunk.js","sourcesContent":["const httpMethods = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n};\n\nclass Service {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  async request(path = '', method = httpMethods.GET, data = {}) {\n    const url = [this.baseUrl, path].join('/');\n    const options = {\n      method,\n      headers: {\n        contentType: 'application/json',\n      },\n    };\n\n    if (method === httpMethods.POST || method === httpMethods.PUT) {\n      options.body = JSON.stringify(data);\n    }\n\n    return fetch(url, options);\n  }\n\n  async list() {\n    return this.request().then((res) => res.json());\n  }\n\n  async entity(id) {\n    return this.request(id).then((res) => res.json());\n  }\n\n  async create(data) {\n    return this.request('', httpMethods.POST, data).then((res) => res.json());\n  }\n\n  async update(id, data) {\n    return this.request(id, httpMethods.PUT, data).then((res) => res.json());\n  }\n}\n\nexport default Service;\n","import Service from './Service';\n\nexport const EmployeeService = new Service(\n  'https://yalantis-react-school-api.yalantis.com/api/task0/users'\n);\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { EmployeeService } from '../../services';\n\n// Async thunks\nexport const fetchEmployees = createAsyncThunk(\n  'employees/fetchEmployees',\n  async () => {\n    try {\n      const employees = await EmployeeService.list();\n\n      return { employees };\n    } catch (e) {\n      console.log('Failed to fetch employees: ', e);\n    }\n  }\n);\n\nconst slice = createSlice({\n  name: 'employee',\n  initialState: {\n    employees: [],\n    selectedEmployeesIds: [],\n  },\n  reducers: {\n    setEmployees: (state, action) => {\n      state.employees = action.payload.employees;\n    },\n    selectEmployee: (state, action) => {\n      state.selectedEmployeesIds.push(action.payload.id);\n    },\n    unselectEmployee: (state, action) => {\n      state.selectedEmployeesIds = state.selectedEmployeesIds.filter(\n        (seId) => seId !== action.payload.id\n      );\n    },\n  },\n  extraReducers: {\n    [fetchEmployees.fulfilled]: (state, action) => {\n      state.employees = action.payload.employees;\n    },\n  },\n});\n\n// Actions\nexport const { setEmployees, selectEmployee, unselectEmployee } = slice.actions;\n\nexport const reducer = slice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { reducer as employeesReducer } from './slices/employee';\n\nconst store = configureStore({\n  reducer: {\n    employee: employeesReducer,\n  },\n});\n\nexport default store;\n","import React, { Suspense } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport store from './redux/store';\n\nconst Home = React.lazy(() => import('./pages/Home'));\nconst Employees = React.lazy(() => import('./pages/Employees'));\nconst NotFound = React.lazy(() => import('./pages/NotFound'));\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n\n              <Route exact path=\"/employees\">\n                <Employees />\n              </Route>\n\n              <Route status={404}>\n                <NotFound />\n              </Route>\n            </Switch>\n          </Router>\n        </Suspense>\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport jss from 'jss';\nimport preset from 'jss-preset-default';\nimport jssNestedPlugin from 'jss-plugin-nested';\n\nimport App from './App';\n\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\njss.setup(preset());\njss.use(jssNestedPlugin());\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}