{"version":3,"sources":["services/Service.js","services/index.js","constants/letters.js","helpers/employee.js","constants/sort.js","redux/slices/employee.js","redux/store.js","components/AlphabeticTable/styles.js","components/AlphabeticTable/AlphabeticTable.jsx","components/AlphabeticTableHead/styles.js","components/AlphabeticTableHead/AlphabeticTableHead.jsx","components/AlphabeticTableHeading/styles.js","components/AlphabeticTableHeading/AlphabeticTableHeading.jsx","components/AlphabeticTableBody/style.js","components/AlphabeticTableBody/AlphabeticTableBody.jsx","components/AlphabeticTableSection/styles.js","components/AlphabeticTableSection/AlphabeticalTableSection.jsx","components/AlphabeticEmployeeSwitcher/styles.js","components/AlphabeticEmployeeSwitcher/AlphabeticEmployeeSwitcher.jsx","components/AlphabeticEmployeeItem/styles.js","shapes/employee.js","components/AlphabeticEmployeeItem/AlphabeticEmployeeItem.jsx","components/AlphabeticEmployeeList/styles.js","components/AlphabeticEmployeeList/AlphabeticEmployeeList.jsx","components/AlphabeticEmployeeBirthdayList/styles.js","components/AlphabeticEmployeeBirthdayList/AlphabeticEmployeeBirthdayList.jsx","pages/Employees.jsx","App.js","reportWebVitals.js","index.js"],"names":["httpMethods","EmployeeService","baseUrl","this","a","path","method","data","url","join","options","headers","contentType","body","JSON","stringify","fetch","request","then","res","json","id","LETTERS","Array","from","lastNamePredicate","b","lastName","toUpperCase","datePattern","parseDateOfBirth","dob","match","groups","fetchEmployees","createAsyncThunk","list","employees","console","log","slice","createSlice","name","initialState","selectedEmployees","reducers","setEmployees","state","action","payload","selectEmployee","push","employeeId","extraReducers","fulfilled","employeesSelector","employee","selectedEmployeesSelector","alphabeticEmployeesSelector","createSelector","sortedEmployees","sort","lettersMap","Object","entries","getEmployeesAlphaEntries","reducer","actions","store","configureStore","employeesReducer","useStyles","createUseStyles","root","width","employeeSection","AlphabeticTable","children","classes","className","inner","AlphabeticTableHead","AlphabeticTableHeading","textAlign","AlphabeticTableBody","AlphabeticTableSection","props","clsx","border","padding","margin","minWidth","display","flexDirection","marginTop","legend","float","fontWeight","clear","legendActive","color","label","height","borderRadius","labelText","marginLeft","inputWrapper","alignItems","input","backgroundColor","boxShadow","AlphabeticEmployeeSwitcher","useState","isActive","setIsActive","handleActivateClick","useCallback","handleDisactivateClick","handleKeyDown","event","keyCode","preventDefault","prev","firstName","type","checked","onChange","tabIndex","role","aria-checked","onKeyDown","htmlFor","PropTypes","string","title","fontSize","switchers","AlphabeticEmployeeItem","letter","employeeSwitchers","map","length","gridTemplateColumns","gridGap","listStyle","AlphabeticEmployeeList","alphabeticEmployees","items","useMemo","lEmployees","AlphabeticEmployeeBirthdayList","month","Number","getEmployeesMonthEntries","Employees","dispatch","useDispatch","useSelector","useEffect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","jss","setup","preset","use","jssNestedPlugin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ac550c7.chunk.js","sourcesContent":["const httpMethods = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT'\n};\n\nclass Service {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  async request(path = '', method = httpMethods.GET, data = {}) {\n    const url = [this.baseUrl, path].join('/');\n    const options = {\n      method,\n      headers: {\n        contentType: 'application/json'\n      }\n    };\n\n    if (method === httpMethods.POST || method === httpMethods.PUT) {\n      options.body = JSON.stringify(data);\n    }\n\n    return fetch(url, options);\n  }\n\n  async list() {\n    return this.request()\n      .then(res => res.json());\n  }\n\n  async entity(id) {\n    return this.request(id)\n      .then(res => res.json());\n  }\n\n  async create(data) {\n    return this.request('', httpMethods.POST, data)\n      .then(res => res.json());\n  }\n\n  async update(id, data) {\n    return this.request(id, httpMethods.PUT, data)\n      .then(res => res.json());\n  }\n}\n\nexport default Service;\n","import Service from './Service';\n\nexport const EmployeeService = new Service('https://yalantis-react-school-api.yalantis.com/api/task0/users');\n","export const LETTERS = Array.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ');","import { DO_SWAP, DO_NOT_SWAP } from '../constants/sort';\nimport { LETTERS } from '../constants/letters';\n\nconst lastNamePredicate = (a, b) => a.lastName.toUpperCase() > b.lastName.toUpperCase()\n  ? DO_SWAP\n  : DO_NOT_SWAP;\n\nexport const getEmployeesAlphaEntries = (employees) => {\n  const sortedEmployees = [...employees].sort(lastNamePredicate);\n  const lettersMap = {};\n\n  for (const l of LETTERS) {\n    lettersMap[l] = [];\n  }\n\n  for (const employee of sortedEmployees) {\n    const letter = employee.lastName[0].toUpperCase();\n\n    lettersMap[letter].push(employee);\n  }\n\n  return Object.entries(lettersMap);\n};\n\n// Date of birth\nconst datePattern = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;\n\nexport const parseDateOfBirth = dob => dob.match(datePattern)?.groups;\n\nexport const getEmployeesMonthEntries = (employees) => {\n  const map = {};\n\n  for (const employee of employees) {\n    const month = Number(parseDateOfBirth(employee.dob).month) - 1;\n    \n    if (map[month]) {\n      map[month].push(employee);\n    } else {\n      map[month] = [employee];\n    }\n  }\n\n  return map;\n};\n","export const DO_SWAP = 1;\nexport const DO_NOT_SWAP = -1;\n","import { createSlice, createAsyncThunk, createSelector } from '@reduxjs/toolkit';\n\nimport { EmployeeService } from '../../services';\n\nimport { getEmployeesAlphaEntries } from '../../helpers/employee';\n\n// Async thunks\nexport const fetchEmployees = createAsyncThunk(\n  'employees/fetchEmployees',\n  async () => {\n    try {\n      const employees = await EmployeeService.list();\n\n      return { employees };\n    } catch (e) {\n      console.log('Failed to fetch employees: ', e);\n    }\n  }\n);\n\nconst slice = createSlice({\n  name: 'employee',\n  initialState: {\n    employees: [],\n    selectedEmployees: []\n  },\n  reducers: {\n    setEmployees: (state, action) => {\n      state.employees = action.payload.employees;\n    },\n    selectEmployee: (state, action) => {\n      state.selectedEmployees.push(action.payload.employeeId);\n    }\n  },\n  extraReducers: {\n    [fetchEmployees.fulfilled]: (state, action) => {\n      state.employees = action.payload.employees;\n    }\n  }\n});\n\n// Selectors\nexport const employeesSelector = state => state.employee.employees;\nexport const selectedEmployeesSelector = state => state.employee.selectedEmployees;\nexport const alphabeticEmployeesSelector = createSelector(\n  employeesSelector,\n  employees => getEmployeesAlphaEntries(employees)\n);\n  \n// Actions\nexport const { setEmployees } = slice.actions;\n\nexport const reducer = slice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { reducer as employeesReducer } from './slices/employee';\n\nconst store = configureStore({\n  reducer: {\n    employee: employeesReducer\n  }\n});\n\nexport default store;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    width: '100%'\n  },\n  employeeSection: {\n    width: '100%'\n  }\n});\n\nexport default useStyles;\n","import React from 'react';\n\nimport useStyles from './styles';\n\nconst AlphabeticTable = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <table className={classes.root}>\n      {children}\n    </table>\n  );\n};\n\nexport default AlphabeticTable;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n\n  },\n  inner: {\n    \n  }\n});\n\nexport default useStyles;\n","import React from 'react';\n\nimport useStyles from './styles';\n\nconst AlphabeticTableHead = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <thead className={classes.root}>\n      <tr className={classes.inner}>\n        {children}\n      </tr>\n    </thead>\n  );\n};\n\nexport default AlphabeticTableHead;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    \n  }\n});\n\nexport default useStyles;\n","import React from 'react';\n\nimport useStyles from './styles';\n\nconst AlphabeticTableHeading = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <th className={classes.root}>\n      {children}\n    </th>\n  );\n};\n\nexport default AlphabeticTableHeading;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    textAlign: 'left'\n  }\n});\n\nexport default useStyles;\n","import React from 'react';\n\nimport useStyles from './style';\n\nconst AlphabeticTableBody = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <tbody className={classes.root}>\n      <tr>\n        {children}\n      </tr>\n    </tbody>\n  );\n};\n\nexport default AlphabeticTableBody;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    \n  }\n});\n\nexport default useStyles;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport useStyles from './styles';\n\nconst AlphabeticTableSection = ({ className = '', children, ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <td className={clsx(classes.root, className)} {...props}>\n      {children}\n    </td>\n  );\n};\n\nexport default AlphabeticTableSection;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    border: 0,\n    padding: 0,\n    margin: 0,\n    minWidth: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    '& + &': {\n      marginTop: 30\n    }\n  },\n  legend: {\n    display: 'table',\n    float: 'left',\n    margin: 0,\n    padding: 0,\n    fontWeight: 600,\n    width: '100%',\n    '& + *': {\n      clear: 'both'\n    }\n  },\n  legendActive: {\n    color: '#00f'\n  },\n  label: {\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    border: '1px solid',\n    borderRadius: '50%'\n  },\n  labelText: {\n    marginLeft: 5\n  },\n  inputWrapper: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  input: {\n    display: 'none',\n    '&:checked + label': {\n      backgroundColor: '#000000',\n      boxShadow: 'inset 0 0 0 2px #ffffff'\n    } \n  }\n});\n\nexport default useStyles;\n","import React, { useState, useCallback } from 'react';\nimport clsx from 'clsx';\n\nimport useStyles from './styles';\n\nconst SPACE_KEY_CODE = 32;\n\nconst AlphabeticEmployeeSwitcher = ({ employee }) => {\n  const classes = useStyles();\n  const [isActive, setIsActive] = useState(false);\n\n  const handleActivateClick = useCallback(() => {\n    console.log('Activating...');\n    setIsActive(true);\n  }, []);\n\n  const handleDisactivateClick = useCallback(() => {\n    console.log('Disactivating...');\n    setIsActive(false);\n  }, []);\n\n  const handleKeyDown = useCallback((event) => {\n    if (event.keyCode === SPACE_KEY_CODE) {\n      event.preventDefault();\n      setIsActive(prev => !prev);\n    }\n  }, []);\n\n  return (\n    <fieldset className={classes.root}>\n      <legend className={clsx(classes.legend, { [classes.legendActive]: isActive })}>\n        {employee.firstName} {employee.lastName}\n      </legend>\n\n      <div className={classes.inputWrapper}>\n        <input\n          type=\"radio\"\n          checked={isActive}\n          className={classes.input}\n          onChange={handleActivateClick}\n          id={`${employee.id}-activate`}\n        />\n\n        <label\n          tabIndex=\"0\"\n          role=\"radio\"\n          aria-checked={isActive}\n          className={classes.label}\n          onKeyDown={handleKeyDown}\n          htmlFor={`${employee.id}-activate`}\n        />\n\n        <span className={classes.labelText}>active</span>\n      </div>\n\n      <div className={classes.inputWrapper}>\n        <input\n          type=\"radio\"\n          checked={!isActive}\n          className={classes.input}\n          id={`${employee.id}-disactivate`}\n          onChange={handleDisactivateClick}\n        />\n        \n        <label\n          tabIndex=\"0\"\n          role=\"radio\"\n          aria-checked={!isActive}\n          className={classes.label}\n          onKeyDown={handleKeyDown}\n          htmlFor={`${employee.id}-disactivate`}\n        />\n        <span className={classes.labelText}>not active</span>\n      </div>\n    </fieldset>\n  );\n};\n\nexport default AlphabeticEmployeeSwitcher;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n\n  },\n  title: {\n    padding: '0 10px',\n    fontSize: 25,\n    margin: '10px 0'\n  },\n  switchers: {\n\n  }\n});\n\nexport default useStyles;\n","import PropTypes from 'prop-types';\n\nconst shape = {\n  id: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dob: PropTypes.string\n};\n\nexport default shape;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AlphabeticEmployeeSwitcher from '../AlphabeticEmployeeSwitcher';\n\nimport employeeShape from '../../shapes/employee';\n\nimport useStyles from './styles';\n\nconst AlphabeticEmployeeItem = ({ letter, employees = [] }) => {\n  const classes = useStyles();\n  const employeeSwitchers = employees.map(employee => (\n    <AlphabeticEmployeeSwitcher key={employee.id} employee={employee} />\n  ));\n\n  return (\n    <li className={classes.root}>\n      <h5 className={classes.title}>{letter}</h5>\n\n      <div className={classes.switchers}>\n        {employees.length > 0 ? employeeSwitchers : <b>-----</b>}\n      </div>\n    </li>\n  );\n};\n\nAlphabeticEmployeeItem.propTypes = {\n  letter: PropTypes.string.isRequired,\n  employees: PropTypes.arrayOf(\n    PropTypes.shape(employeeShape)\n  )\n};\n\nexport default AlphabeticEmployeeItem;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    gridGap: 20,\n    listStyle: 'none',\n    padding: 0\n  }\n});\n\nexport default useStyles;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AlphabeticEmployeeItem from '../AlphabeticEmployeeItem';\n\nimport useStyles from './styles';\n\nconst AlphabeticEmployeeList = ({ alphabeticEmployees = [] }) => {\n  const classes = useStyles();\n  const items = useMemo(\n    () => alphabeticEmployees.map(([ letter, lEmployees ])=> (\n      <AlphabeticEmployeeItem key={letter} letter={letter} employees={lEmployees} />\n    )),\n    [alphabeticEmployees]\n  );\n\n  return (\n    <ul className={classes.root}>\n      {items}\n    </ul>\n  );\n};\n\nAlphabeticEmployeeList.propTypes = {\n  alphabeticEmployees: PropTypes.array\n};\n\nexport default AlphabeticEmployeeList;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  root: {\n\n  }\n});\n\nexport default useStyles;\n","import React from 'react';\n\nimport useStyles from './styles';\n\nimport { getEmployeesMonthEntries } from '../../helpers/employee';\n\nconst AlphabeticEmployeeBirthdayList = ({ employees = [] }) => {\n  const classes = useStyles();\n  const employeeMonthsEntries = getEmployeesMonthEntries(employees);\n\n  return (\n    <div className={classes.root}>\n      asdf\n    </div>\n  );\n};\n\nexport default AlphabeticEmployeeBirthdayList;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUseStyles } from 'react-jss';\n\nimport AlphabeticTable from '../components/AlphabeticTable';\nimport AlphabeticTableHead from '../components/AlphabeticTableHead';\nimport AlphabeticTableHeading from '../components/AlphabeticTableHeading';\nimport AlphabeticTableBody from '../components/AlphabeticTableBody';\nimport AlphabeticTableSection from '../components/AlphabeticTableSection';\nimport AplhabeticEmployeeList from '../components/AlphabeticEmployeeList';\nimport AlphabeticEmployeeBirthdayList from '../components/AlphabeticEmployeeBirthdayList';\n\nimport {\n  fetchEmployees,\n  employeesSelector,\n  selectedEmployeesSelector,\n  alphabeticEmployeesSelector\n} from '../redux/slices/employee';\n\nconst useStyles = createUseStyles({\n  root: {\n    padding: 30\n  }\n});\n\nconst Employees = () => {\n  const dispatch = useDispatch();\n  const alphabeticEmployees = useSelector(alphabeticEmployeesSelector);\n  const employees = useSelector(employeesSelector);\n  const selectedEmployees = useSelector(selectedEmployeesSelector);\n  const classes = useStyles();\n\n  console.log('Selected employees: ', selectedEmployees);\n\n  useEffect(() => {\n    dispatch(fetchEmployees());\n  }, [dispatch]);\n\n  return (\n    <div className={classes.root}>\n      <AlphabeticTable>\n        <AlphabeticTableHead>\n          <AlphabeticTableHeading>\n            Employees\n          </AlphabeticTableHeading>\n\n          <AlphabeticTableHeading>\n            Employees birthday\n          </AlphabeticTableHeading>\n        </AlphabeticTableHead>\n\n        <AlphabeticTableBody>\n          <AlphabeticTableSection className={classes.employeeSection}>\n            <AplhabeticEmployeeList alphabeticEmployees={alphabeticEmployees} />\n          </AlphabeticTableSection>\n\n          <AlphabeticTableSection>\n            <AlphabeticEmployeeBirthdayList employees={employees} />\n          </AlphabeticTableSection>\n        </AlphabeticTableBody>\n      </AlphabeticTable>\n    </div>\n  );\n};\n\nexport default Employees;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport store from './redux/store';\n\nimport Employees from './pages/Employees';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route path=\"/employees\">\n              <Employees />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport jss from 'jss';\nimport preset from 'jss-preset-default';\nimport jssNestedPlugin from 'jss-plugin-nested';\n\nimport App from './App';\n\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals'\n\njss.setup(preset()); \njss.use(jssNestedPlugin());;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}